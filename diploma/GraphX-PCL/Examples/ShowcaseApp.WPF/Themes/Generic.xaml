<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WindowGlows"
                    xmlns:mui="http://firstfloorsoftware.com/ModernUI">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- REGION Fixed ModernButton from ModernUI -->
    <Style TargetType="mui:ModernButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource ModernButtonText}" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="mui:ModernButton">
                    <Grid x:Name="grid" Background="Transparent" Margin="{TemplateBinding Padding}" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Grid Width="{TemplateBinding EllipseDiameter}"
                              Height="{TemplateBinding EllipseDiameter}">
                            <Ellipse x:Name="ellipse"
                                     Stroke="{DynamicResource ModernButtonBorder}"
                                     StrokeThickness="{TemplateBinding EllipseStrokeThickness}"
                                     Fill="{TemplateBinding Background}"
                                     VerticalAlignment="Stretch" />
                            <Path x:Name="icon"
                                  Data="{TemplateBinding IconData}" 
                                  Width="{TemplateBinding IconWidth}"
                                  Height="{TemplateBinding IconHeight}"
                                  Fill="{TemplateBinding Foreground}"
                                  Stretch="Uniform" HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                        </Grid>
                        <Grid Grid.Column="1" >
                            <TextBlock DataContext="{TemplateBinding Content}"
                                       Visibility="{Binding Converter={StaticResource NullOrEmptyStringToVisibilityConverter}, ConverterParameter=inverse}"
                                       Text="{Binding Converter={StaticResource ToLowerConverter}}"
                                       TextTrimming="CharacterEllipsis"
                                       Foreground="{TemplateBinding Foreground}"
                                       Margin="4,-1,0,0"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextHover}" />
                            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}"/>
                            <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource ModernButtonBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextPressed}" />
                            <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource ModernButtonBorderPressed}" />
                            <Setter TargetName="ellipse" Property="Fill" Value="{DynamicResource ModernButtonIconBackgroundPressed}" />
                            <Setter TargetName="icon" Property="Fill" Value="{DynamicResource ModernButtonIconForegroundPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextDisabled}" />
                            <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource ModernButtonBorderDisabled}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource Accent}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
<!-- ENDREGION -->


    <Style TargetType="{x:Type local:GlowWindow}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GlowWindow}">
                    <Border Background="Transparent">
                        <Grid>
                            <Border x:Name="PART_Glow"
                                    Background="{Binding Foreground,RelativeSource={RelativeSource TemplatedParent}}"
                                    CornerRadius="50">
                                <Border.Effect>
                                    <BlurEffect Radius="10" />
                                </Border.Effect>
                            </Border>
                            <Border />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonText}"/>
    </Style>



    <Style TargetType="ToggleButton" x:Key="toggleButtonModernStyle">
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource ButtonText}"></Setter>


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <ContentPresenter Margin="1" TextBlock.Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter.Resources>
                                <Style TargetType="Path">
                                    <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></Setter>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Button.Background" Value="{DynamicResource ButtonBackgroundHover}"></Setter>
                <Setter Property="Button.BorderBrush" Value="{DynamicResource ButtonBorderHover}"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Button.Background" Value="{DynamicResource ButtonBackgroundPressed}"></Setter>
                <Setter Property="Button.BorderBrush" Value="{DynamicResource ButtonBorderPressed}"></Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Button.Background" Value="{DynamicResource ButtonBackgroundPressed}"></Setter>
                <Setter Property="Button.BorderBrush" Value="{DynamicResource ButtonBorderPressed}"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Button.Foreground" Value="{DynamicResource ButtonTextDisabled}"></Setter>
                <Setter Property="Button.BorderBrush" Value="{DynamicResource ModernButtonBorderDisabled}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
