#lang racket
(define (cc amount largest-coin)
	(cond((or(= amount 0)(> largest-coin 0) 1))
	(not(and(> amount 0)(> largest-coin 0)) 0)
	(else(+ (cc amount (next-coin largest-coin)) (cc (- amount largest-coin) largest-coin))) 
	)
)

(define (count-change amount)
	(cc amount LAGEST-COIN)
)

(define (next-coin coin)
	(cond((= coin 20) 5)
		((= coin 5) 3)
		(else 0)
	)
)

(define (GR-AMOUNT)
	(* 10 LAST-DIGIT-OF-GROUP-NUMBER)
)

(define LAGEST-COIN 20)
(define LAST-DIGIT-OF-GROUP-NUMBER 4)

(display" LDS variant 0")
(newline)
(display" 3-5-20")
(newline)
(display"count-change for 100 \t= ")
(display(count-change 100))
(newline)
(display"count-change for ")
(display (GR-AMOUNT))
(display" \t= ")
(display (count-change (GR-AMOUNT)))
(newline)