(define (one) 1)
(define (five) 5)
(define (ten) 10)
(define (fifteen) 15)
(define (twenty) 20)
(define (twenty-five) 25)
(define (LARGEST-COIN) 50)
(define (hundred) 100)
(define (LAST-DIGIT-OF-GROUP-NUMBER) 4)

(define (cc amount largest-coin)
	(cond ((or (= amount 0) (= largest-coin (one))) (one))
		(#t(cond((or (not(> amount 0)) (not(> largest-coin 0))) 0)
		(#t (+(cc amount (next-coin largest-coin)) 
			(cc(- amount largest-coin) largest-coin)))))))

(define (count-change amount)
	(cc amount (LARGEST-COIN)))

(define (next-coin coin)
	(cond((= coin (LARGEST-COIN)) (twenty-five))
		(#t(cond((= coin (twenty-five)) (twenty))
		(#t(cond((= coin (twenty)) (fifteen))
		(#t(cond((= coin (fifteen)) (ten))
		(#t(cond((= coin (ten)) (five))
		(#t 0)))))))))))

(define (GR-AMOUNT)
	(* (ten) (LAST-DIGIT-OF-GROUP-NUMBER)))


(define (help-to-disp temp)
  (display "5-10-15-20-25-50")
  (newline)
  (display "count-change for 100 \t= ")
  (display (count-change (hundred)))
  (newline)
  (display "count-change for ")
  (display (GR-AMOUNT))
  (display " \t= ")
  (display (count-change (GR-AMOUNT)))
  temp)

"SDM variant 15"
(help-to-disp (one))