(define (one) 1)
(define (five) 5)
(define (ten) 10)
(define (fifteen) 15)
(define (twenty) 20)
(define (twenty-five) 25)
(define (LARGEST-COIN) 50)
(define (LAST-DIGIT-OF-GROUP-NUMBER) 4)

(define (cc amount largest-coin)
	(cond ((or (= amount 0) (= largest-coin (one))) (one))
		((not(and(> amount 0) (> largest-coin 0))) 0)
		(else(+(cc amount (next-coin largest-coin)) 
			(cc(- amount largest-coin) largest-coin)))))

(define (count-change amount)
	(cc amount (LARGEST-COIN)))

(define (next-coin coin)
	(cond((= coin (LARGEST-COIN)) (twenty-five))
		((= coin (twenty-five)) (twenty))
		((= coin (twenty)) (fifteen))
		((= coin (fifteen)) (ten))
		((= coin (ten)) (five))
		(else 0)))

(define (GR-AMOUNT)
	(* (ten) (LAST-DIGIT-OF-GROUP-NUMBER)))



(display "SDM variant 15")
(newline)
(display "5-10-15-20-25-50")
(newline)
(display "count-change for 100 \t= ")
(display (count-change 100))
(newline)
(display "count-change for ")
(display (GR-AMOUNT))
(display " \t= ")
(display (count-change (GR-AMOUNT)))