Логическое программирование 17,09,2016

Лабораторная №1

	- Термы - базовые лексические единицы
		- Простые
			- Константы
				- Атомы
					1. Последовательность латинсских букв, цифр, символов подчеркивания с маленькой буквы (amziProlog)
					2. +, -, ...
					3. Любая последовательность взятая в апостроф ('AmziProlog')
				- Числа
			- Переменные
				1. Последовательность букв цифр с большой буквы (AmziProlog)
				2. _ - анонимная переменная 
					Пример:
						щедрый(X) :- дарит(Х, _, _) _ держит место, ":-" - импликация (следование)
		- Структурные
			Структор(ard1, arg2, ..., argN)
			f(x, y) - функтор.

	- Структура программы:
		* Факты
		* Правила
		* Цель1
			Цель2
				...

	- Какая-то программа 1:

		отец(Вася, Миша).
		отец(Вася, Петя).
		отец(Миша, Билл).
		отец(Миша, Джон).

		дедушка(Х, У) :- отец (Х, Z), (и) отец(Z, Y). // ; - или

	- Какая-то программа 2:
		
		programmer(X) :- study('MAI', X), know('Prolog', X).
		
		study('MAI', 'Mike').
		study('MAI', 'Masha').
		know('Prolog', 'Misha').
		know('C', 'Masha').

		? - programmer(X), write(X).
			X = ...
		? - programmer('Misha').
		? - study('MAI', X), write(X).
		? - study(_, X), write(X).
		? - know(...).

	- Правила унификации:
		1. Константы унифицируются с той же константой.
		2. Свободная переменная унифицируется один раз, при этом связывается.
		3. Связанная переменная унифицируется так же, как и ее значение.
		4. Два структурных терма унифицируются, если у них два одинаковых функтора, одинаковое число аргументов, и унифицируются все аргументы.

	is - оператор сложения


Программа, вычисляющая сопротивления тока в цепи:

resist(parallel(X, Y), Z) :- Z is (X + Y) / (X * Y).
resist(consequence(X, Y), Z) :- Z is X + Y.
resist(X, X).

? - resist(parallel(parallel(10, 10), consequence(5, 7)), Z), write(Z).

